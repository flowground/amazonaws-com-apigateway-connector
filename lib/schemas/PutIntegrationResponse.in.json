{
    "type": "object",
    "properties": {
        "restapi_id": {
            "required": true,
            "type": "string"
        },
        "resource_id": {
            "required": true,
            "type": "string"
        },
        "http_method": {
            "required": true,
            "type": "string"
        },
        "status_code": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Represents a put integration response request.",
            "properties": {
                "contentHandling": {
                    "description": "<p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>",
                    "enum": [
                        "CONVERT_TO_BINARY",
                        "CONVERT_TO_TEXT"
                    ],
                    "type": "string"
                },
                "responseParameters": {
                    "description": "A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> must be a valid and unique response header name and <code>JSON-expression</code> a valid JSON expression without the <code>$</code> prefix.",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "responseTemplates": {
                    "description": "Specifies a put integration response's templates.",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "selectionPattern": {
                    "description": "Specifies the selection pattern of a put integration response.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}